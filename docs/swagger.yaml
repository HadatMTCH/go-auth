definitions:
  models.LoginResponse:
    properties:
      id:
        example: 1
        type: integer
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  models.User:
    properties:
      email:
        example: john@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      password:
        example: securepassword123
        type: string
      username:
        example: johndoe
        type: string
    type: object
  models.UserResponse:
    properties:
      created_at:
        example: "2023-06-15T14:30:00Z"
        type: string
      email:
        example: john@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      id:
        example: 1
        type: integer
      is_admin:
        example: false
        type: boolean
      updated_at:
        example: "2023-06-15T14:30:00Z"
        type: string
      username:
        example: johndoe
        type: string
    type: object
  utils.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login user
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the input payload
      parameters:
      - description: Register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
